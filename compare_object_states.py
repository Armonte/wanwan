#!/usr/bin/env python3

# Object data from slot 1 during different splash screens

# Screen 1 (initial boot)
screen1_data = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x11, 0x0, 0x0, 0x0, 0x7f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0] + [0] * 282 + [0x1, 0x0, 0x0, 0x0, 0xee, 0x0, 0x0, 0x0] + [0] * 28

# Screen 2 (next splash)  
screen2_data = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x11, 0x0, 0x0, 0x0, 0x7f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0] + [0] * 282 + [0x3, 0x0, 0x0, 0x0, 0x9f, 0x0, 0x0, 0x0] + [0] * 28

print('FM2K Object State Comparison: Screen 1 vs Screen 2')
print('=' * 60)

# Find all differences
differences = []
for i in range(min(len(screen1_data), len(screen2_data))):
    if screen1_data[i] != screen2_data[i]:
        differences.append((i, screen1_data[i], screen2_data[i]))

print(f'Total differences found: {len(differences)}')
print()

print('Key changes detected:')
for offset, old_val, new_val in differences:
    print(f'  Offset {offset:3d}: 0x{old_val:02X} ({old_val:3d}) -> 0x{new_val:02X} ({new_val:3d})')
    
    # Try to interpret what this field might be
    if offset == 345:
        print(f'                  ^ Possible state/mode field')
    elif offset == 349:
        print(f'                  ^ Possible counter/timer field')

print()
print('Interpretation:')
print('- Object type remains 0x11 (17) - same boot object')
print('- Object ID remains 0x7F (127) - same instance')
print('- Core structure unchanged')
print(f'- State field changed: {screen1_data[345]} -> {screen2_data[345]}')
print(f'- Timer/counter changed: {screen1_data[349]} -> {screen2_data[349]}')

print()
print('Rollback implications:')
print('- Only 2 bytes changed between splash screens')
print('- Most of the 382-byte object is static')
print('- Could save just offsets 345 + 349 for this object type')
print('- Giuroll-style approach: save only changing fields')

print()
print('Next steps:')
print('1. Continue tracking through more splash screens')
print('2. See if pattern holds (same 2 offsets changing)')
print('3. Check if new objects appear in other slots')
print('4. Map which fields are truly dynamic vs static')