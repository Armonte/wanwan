
int SDL_GetNumAudioDrivers(void);                                                                                                                                // Use this function to get the number of built-in audio drivers.
const char * SDL_GetAudioDriver(int index);                                                                                                                      // Use this function to get the name of a built in audio driver.
const char * SDL_GetCurrentAudioDriver(void);                                                                                                                    // Get the name of the current audio driver.
SDL_AudioDeviceID * SDL_GetAudioPlaybackDevices(int *count);                                                                                                     // Get a list of currently-connected audio playback devices.
SDL_AudioDeviceID * SDL_GetAudioRecordingDevices(int *count);                                                                                                    // Get a list of currently-connected audio recording devices.
const char * SDL_GetAudioDeviceName(SDL_AudioDeviceID devid);                                                                                                    // Get the human-readable name of a specific audio device.
bool SDL_GetAudioDeviceFormat(SDL_AudioDeviceID devid, SDL_AudioSpec *spec, int *sample_frames);                                                                 // Get the current audio format of a specific audio device.
int * SDL_GetAudioDeviceChannelMap(SDL_AudioDeviceID devid, int *count);                                                                                         // Get the current channel map of an audio device.
SDL_AudioDeviceID SDL_OpenAudioDevice(SDL_AudioDeviceID devid, const SDL_AudioSpec *spec);                                                                       // Open a specific audio device.
bool SDL_IsAudioDevicePhysical(SDL_AudioDeviceID devid);                                                                                                         // Determine if an audio device is physical (instead of logical).
bool SDL_IsAudioDevicePlayback(SDL_AudioDeviceID devid);                                                                                                         // Determine if an audio device is a playback device (instead of recording).
bool SDL_PauseAudioDevice(SDL_AudioDeviceID devid);                                                                                                              // Use this function to pause audio playback on a specified device.
bool SDL_ResumeAudioDevice(SDL_AudioDeviceID devid);                                                                                                             // Use this function to unpause audio playback on a specified device.
bool SDL_AudioDevicePaused(SDL_AudioDeviceID devid);                                                                                                             // Use this function to query if an audio device is paused.
float SDL_GetAudioDeviceGain(SDL_AudioDeviceID devid);                                                                                                           // Get the gain of an audio device.
bool SDL_SetAudioDeviceGain(SDL_AudioDeviceID devid, float gain);                                                                                                // Change the gain of an audio device.
void SDL_CloseAudioDevice(SDL_AudioDeviceID devid);                                                                                                              // Close a previously-opened audio device.
bool SDL_BindAudioStreams(SDL_AudioDeviceID devid, SDL_AudioStream * const *streams, int num_streams);                                                           // Bind a list of audio streams to an audio device.
bool SDL_BindAudioStream(SDL_AudioDeviceID devid, SDL_AudioStream *stream);                                                                                      // Bind a single audio stream to an audio device.
void SDL_UnbindAudioStreams(SDL_AudioStream * const *streams, int num_streams);                                                                                  // Unbind a list of audio streams from their audio devices.
void SDL_UnbindAudioStream(SDL_AudioStream *stream);                                                                                                             // Unbind a single audio stream from its audio device.
SDL_AudioDeviceID SDL_GetAudioStreamDevice(SDL_AudioStream *stream);                                                                                             // Query an audio stream for its currently-bound device.
SDL_AudioStream * SDL_CreateAudioStream(const SDL_AudioSpec *src_spec, const SDL_AudioSpec *dst_spec);                                                           // Create a new audio stream.
SDL_PropertiesID SDL_GetAudioStreamProperties(SDL_AudioStream *stream);                                                                                          // Get the properties associated with an audio stream.
bool SDL_GetAudioStreamFormat(SDL_AudioStream *stream, SDL_AudioSpec *src_spec, SDL_AudioSpec *dst_spec);                                                        // Query the current format of an audio stream.
bool SDL_SetAudioStreamFormat(SDL_AudioStream *stream, const SDL_AudioSpec *src_spec, const SDL_AudioSpec *dst_spec);                                            // Change the input and output formats of an audio stream.
float SDL_GetAudioStreamFrequencyRatio(SDL_AudioStream *stream);                                                                                                 // Get the frequency ratio of an audio stream.
bool SDL_SetAudioStreamFrequencyRatio(SDL_AudioStream *stream, float ratio);                                                                                     // Change the frequency ratio of an audio stream.
float SDL_GetAudioStreamGain(SDL_AudioStream *stream);                                                                                                           // Get the gain of an audio stream.
bool SDL_SetAudioStreamGain(SDL_AudioStream *stream, float gain);                                                                                                // Change the gain of an audio stream.
int * SDL_GetAudioStreamInputChannelMap(SDL_AudioStream *stream, int *count);                                                                                    // Get the current input channel map of an audio stream.
int * SDL_GetAudioStreamOutputChannelMap(SDL_AudioStream *stream, int *count);                                                                                   // Get the current output channel map of an audio stream.
bool SDL_SetAudioStreamInputChannelMap(SDL_AudioStream *stream, const int *chmap, int count);                                                                    // Set the current input channel map of an audio stream.
bool SDL_SetAudioStreamOutputChannelMap(SDL_AudioStream *stream, const int *chmap, int count);                                                                   // Set the current output channel map of an audio stream.
bool SDL_PutAudioStreamData(SDL_AudioStream *stream, const void *buf, int len);                                                                                  // Add data to the stream.
bool SDL_PutAudioStreamDataNoCopy(SDL_AudioStream *stream, const void *buf, int len, SDL_AudioStreamDataCompleteCallback callback, void *userdata);              // Add external data to an audio stream without copying it.
bool SDL_PutAudioStreamPlanarData(SDL_AudioStream *stream, const void * const *channel_buffers, int num_channels, int num_samples);                              // Add data to the stream with each channel in a separate array.
int SDL_GetAudioStreamData(SDL_AudioStream *stream, void *buf, int len);                                                                                         // Get converted/resampled data from the stream.
int SDL_GetAudioStreamAvailable(SDL_AudioStream *stream);                                                                                                        // Get the number of converted/resampled bytes available.
int SDL_GetAudioStreamQueued(SDL_AudioStream *stream);                                                                                                           // Get the number of bytes currently queued.
bool SDL_FlushAudioStream(SDL_AudioStream *stream);                                                                                                              // Tell the stream that you're done sending data, and anything being buffered should be converted/resampled and made available immediately.
bool SDL_ClearAudioStream(SDL_AudioStream *stream);                                                                                                              // Clear any pending data in the stream.
bool SDL_PauseAudioStreamDevice(SDL_AudioStream *stream);                                                                                                        // Use this function to pause audio playback on the audio device associated with an audio stream.
bool SDL_ResumeAudioStreamDevice(SDL_AudioStream *stream);                                                                                                       // Use this function to unpause audio playback on the audio device associated with an audio stream.
bool SDL_AudioStreamDevicePaused(SDL_AudioStream *stream);                                                                                                       // Use this function to query if an audio device associated with a stream is paused.
bool SDL_LockAudioStream(SDL_AudioStream *stream);                                                                                                               // Lock an audio stream for serialized access.
bool SDL_UnlockAudioStream(SDL_AudioStream *stream);                                                                                                             // Unlock an audio stream for serialized access.
bool SDL_SetAudioStreamGetCallback(SDL_AudioStream *stream, SDL_AudioStreamCallback callback, void *userdata);                                                   // Set a callback that runs when data is requested from an audio stream.
bool SDL_SetAudioStreamPutCallback(SDL_AudioStream *stream, SDL_AudioStreamCallback callback, void *userdata);                                                   // Set a callback that runs when data is added to an audio stream.
void SDL_DestroyAudioStream(SDL_AudioStream *stream);                                                                                                            // Free an audio stream.
SDL_AudioStream * SDL_OpenAudioDeviceStream(SDL_AudioDeviceID devid, const SDL_AudioSpec *spec, SDL_AudioStreamCallback callback, void *userdata);               // Convenience function for straightforward audio init for the common case.
bool SDL_SetAudioIterationCallbacks(SDL_AudioDeviceID devid, SDL_AudioIterationCallback start, SDL_AudioIterationCallback end, void *userdata);                  // Set callbacks that fire around a new iteration of audio device processing.
bool SDL_SetAudioPostmixCallback(SDL_AudioDeviceID devid, SDL_AudioPostmixCallback callback, void *userdata);                                                    // Set a callback that fires when data is about to be fed to an audio device.
bool SDL_LoadWAV_IO(SDL_IOStream *src, bool closeio, SDL_AudioSpec *spec, Uint8 **audio_buf, Uint32 *audio_len);                                                 // Load the audio data of a WAVE file into memory.
bool SDL_LoadWAV(const char *path, SDL_AudioSpec *spec, Uint8 **audio_buf, Uint32 *audio_len);                                                                   // Loads a WAV from a file path.
bool SDL_MixAudio(Uint8 *dst, const Uint8 *src, SDL_AudioFormat format, Uint32 len, float volume);                                                               // Mix audio data in a specified format.
bool SDL_ConvertAudioSamples(const SDL_AudioSpec *src_spec, const Uint8 *src_data, int src_len, const SDL_AudioSpec *dst_spec, Uint8 **dst_data, int *dst_len);  // Convert some audio data of one format to another format.
const char * SDL_GetAudioFormatName(SDL_AudioFormat format);                                                                                                     // Get the human readable name of an audio format.
int SDL_GetSilenceValueForFormat(SDL_AudioFormat format);                                                                                                        // Get the appropriate memset value for silencing an audio format.
