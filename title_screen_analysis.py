#!/usr/bin/env python3

print('FM2K Title Screen Analysis: Object Pool Explosion!')
print('=' * 60)

print('MAJOR DISCOVERY: Object Pool Grew Dramatically!')
print()

print('Object Evolution Timeline:')
print('Controls Splash: 3 objects  (Types 4, 12, 94)')
print('Title Screen:    6+ objects (Types 4×5, 12×1)')

print()
print('Active Objects on Title Screen:')
print('Slot    Type    Status')
print('----    ----    ------')
print('0       12      Persistent from controls splash')
print('1       4       New or transformed')
print('2       4       New or transformed') 
print('4       4       New object')
print('5       4       New object')
print('9       4       NEW - Highlight bar (you observed this creation)')

print()
print('Key Observations:')
print('✓ Type 4 objects multiplied from 1 → 5')
print('✓ Type 12 object persisted')
print('✓ Type 94 object disappeared (UI state change)')
print('✓ Objects not in sequential slots (0,1,2,4,5,9) - sparse allocation')
print('✓ Highlight bar is Type 4 object (interactive UI element)')

print()
print('Object Pool Management Insights:')
print('- FM2K uses sparse slot allocation (skips slot 3, 6, 7, 8)')
print('- Objects created dynamically as UI elements appear')
print('- Type 4 seems to be the primary interactive/dynamic object type')
print('- Object lifecycle: create on demand, possibly reuse slots')

print()
print('Rollback Implications:')
print('✓ Must track object creation/deletion per frame')
print('✓ Cannot assume sequential slot usage')
print('✓ Object count varies dramatically between screens')
print('✓ Type 4 objects are clearly important (5/6 total objects)')

print()
print('Giuroll Parallel Confirmed:')
print('- Giuroll tracks heap alloc/free per frame')
print('- FM2K tracks object create/destroy per frame')
print('- Both need frame-by-frame object lifecycle management')
print('- Save format must handle variable object counts')

print()
print('Type 4 Object Behavior Analysis:')
print('- Controls splash: 1 Type 4 object')
print('- Title screen: 5 Type 4 objects')
print('- Highlight bar: Type 4 object (interactive)')
print('- Hypothesis: Type 4 = interactive/dynamic elements')

print()
print('Next Research:')
print('- Move cursor in title menu → see if highlight bar (slot 9) changes')
print('- Go to character select → see how Type 4 objects evolve')
print('- Map Type 4 object fields during interaction')
print('- Identify Type 12 object purpose')

print()
print('Memory Efficiency Update:')
print('Current state: 6 objects × 382 bytes = 2,292 bytes')
print('With type-specific saving: ~150-200 bytes estimated')
print('Reduction: ~92% memory savings possible')